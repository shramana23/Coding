Receipe id(int)
name
description
method(steps for prepration)
ingredients
1
name1
xxxx
setp 1, step 2, step 3
A








B








C










2
name2
xxxx
setp 1, step 2, step 3
C








D








E










3
name3
xx
setp 1, step 2, step 3
A








C








D


recipe table
recipe, name, description

steps table 
step id  step_count description 
1		1  		aa
2		2		bb

recipe_steps
recipe id 	step id
1		1



ingredients - 
id, name 
1 salt 
2 sugar 

recipe_ingredients 
recipe_id ingredient_id 
1 		2
1 		3

recipe -> recipe_ingredients - one to many 
recipe -> steps - one to many - one recipe can have multiple steps - foreign key recipe id


select r.name, r.description, s.step_count, s.description from recipe r inner join recipe_ingredients ri on r.id = ri.recipe_id
inner join ingredients i on i.id = ri.ingredient_id 
inner join recipe_steps si on si.recipe_id = r.id
inner join steps s on s.step_id = si.step_id
where  r.name = query or i.name = query  limit 


Req.:
DB design: 
to hold all these records - recipe count : 2,00,00,000


API design(load 250 req/s):
Use case1:
Response: recipe name
Request: name/ingredients
Use case2:
Response: recipe name
Request: NA


return the list of all recipes 
search 

urls.py - route 
get_recipe
get_all_recipe





views.py 


def get_recipe(request):
	name = request.get(‘name’)










